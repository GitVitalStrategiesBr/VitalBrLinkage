df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'dt_nasc', 'ds_nome_mae_sound', 'nu_cpf'),
c('nu_cpf', 'nu_cns'),
34
)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
df_2 |> filter(!is.na(par_1)) |> nrow()
df_2 <- df_2 |>
mutate(
nao_gemelar = ifelse(is.na(gemelar), 1, NA),
nome_pac_6 = substr(ds_nome_pac, 1, 11),
nome_5_12 = substr(ds_nome_pac, 5, 12),
dif_ob_nasc = dt_obito-dt_nasc
)
df_2 |> select(df_ob_nasc)
df_2 <- df_2 |>
mutate(
nao_gemelar = ifelse(is.na(gemelar), 1, NA),
nome_pac_6 = substr(ds_nome_pac, 1, 11),
nome_5_12 = substr(ds_nome_pac, 5, 12),
dif_ob_nasc = dt_obito-dt_nasc
)
df_2$dif_ob_nasc
df_2$dt_obito
df_2$dt_nasc
# # Regra 35
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc'),
c('ds_nome_pac_sound'),
35
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# # Regra 35
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc', 'dt_nasc', 'ds_nome_mae1', ''),
c('ds_nome_pac_sound'),
35
)
# # Regra 35
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc', 'dt_nasc', 'ds_nome_mae1', 'ds_nome_mae3'),
c('ds_nome_pac_sound'),
35
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c35)
# Regra 35 - demora bastante
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc', 'dt_nasc', 'ds_nome_mae1', 'ds_nome_mae3'),
c('ds_nome_pac_sound'),
35
)
df_t$par_c35
df_2<-df_t
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c35)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c35') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Regra 36 - demora bastante
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_pac2', 'sg_sexo', 'nu_idade_anos', 'mes_nasc', 'gemelar', 'morreu'),
c('ds_nome_pac_sound'),
36
)
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
View(acompanhamento)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c35)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c35') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# Regra 37
df_2 <- df_2 |>
mutate(nome_menos_5d = str_sub(ds_nome_pac, end = -6)) |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_pac2', 'dt_obito', 'dt_nasc', 'mes_nasc', 'gemelar', 'morreu'),
c('ds_nome_mae_sound'),
37
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c36)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c36') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
View(complementares)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
View(acompanhamento)
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
#save(df_2, file = 'C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/rn_linkada_89.RData')
load('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/rn_linkada_89.RData')
# Regra 90 - stata inspirado no 97 - pega irmãos
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_obito', 'dt_nasc'),
c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'ano_nasc'),
90
)
# Regra 91 - stata inspirado no 99
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_mae_sound', 'dt_obito', 'ano_nasc'),
c('ds_nome_pac_sound', 'ds_nome_mae_sound', 'dt_obito', 'ano_nasc'),
91
)
# Regra 92 - stata inspirado no 100
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_mae_sound', 'dt_obito', 'ano_nasc'),
c('ds_nome_pac_sound', 'ds_nome_mae_sound', 'dt_obito', 'ano_nasc'),
92
)
df_2 <- df_2 |>
mutate(mae1_menos3 = substr(ds_nome_mae, 1, nchar(ds_nome_mae) - 3))
# Regra 93
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('mae_menos5d', 'ds_nome_pac1', 'ds_nome_pac2_sound', 'dt_nasc', 'faixa_etaria', 'ds_bairro_res', 'mae1_menos3'),
c('mae_menos5d', 'ds_nome_pac1_sound'),
93
)
## ACOMPANHAMENTO DAS REGRAS
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c9", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1,
all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c93)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c93') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, dt_obito, ds_nome_mae,
nu_cpf, nu_cns, nu_doc,nu_doc_copia, cd_mun_not ,banco
)
View(complementares)
df_2 |> filter(!is.na(par_1)) |> nrow()
# Regra 95
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('mae_menos5d', 'ds_nome_pac1', 'ds_nome_pac2_sound', 'ano_nasc','mes_nasc', 'faixa_etaria', 'ds_bairro_res', 'mae1_menos3'),
c('ds_nome_pac_sound'),
95
)
## ACOMPANHAMENTO DAS REGRAS
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c9", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1,
all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c93)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c93') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, dt_obito, ds_nome_mae,
nu_cpf, nu_cns, nu_doc,nu_doc_copia, cd_mun_not ,banco
)
View(complementares)
save(df_2, file = 'C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/rn_linkada_95.RData')
tab_1(df_2, banco)
df_2 |> distinct(par_1)
df_2 |> distinct(par_1) |> nrow()
df_2 |> group_by(par_1) |> summarise(contagem = n()) |> arrange(-contagem)
## ACOMPANHAMENTO DE POSSIVEIS ERROS
# mais de 20x o valor de par_1
muitos_registros <- df_2 |>
filter(!is.na(par_1)) |>
group_by(par_1) |>
summarise(contagem = n()) |>
filter(contagem > 20) |>
arrange(-contagem)
# df com os maiores de par_1
mais_frequentes <- df_2 |>
filter(par_1%in%muitos_registros$par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante)
# df com os maiores de par_1
mais_frequentes <- df_2 |>
filter(par_1%in%muitos_registros$par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante)
View(muitos_registros)
View(mais_frequentes)
## ACOMPANHAMENTO DE POSSIVEIS ERROS
# mais de 20x o valor de par_1
muitos_registros <- df_2 |>
filter(!is.na(par_1)) |>
group_by(par_1) |>
summarise(contagem = n()) |>
filter(contagem > 19) |>
arrange(-contagem)
# df com os maiores de par_1
mais_frequentes <- df_2 |>
filter(par_1%in%muitos_registros$par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante)
View(muitos_registros)
## ACOMPANHAMENTO DE POSSIVEIS ERROS
# mais de 20x o valor de par_1
muitos_registros <- df_2 |>
filter(!is.na(par_1)) |>
group_by(par_1) |>
summarise(contagem = n()) |>
filter(contagem > 19) |>
arrange(-contagem) |>
group_by(par_1) |>
mutate(n()) |>
ungroup()
View(muitos_registros)
## ACOMPANHAMENTO DE POSSIVEIS ERROS
# mais de 20x o valor de par_1
muitos_registros <- df_2 |>
filter(!is.na(par_1)) |>
group_by(par_1) |>
summarise(contagem = n()) |>
filter(contagem > 19) |>
arrange(-contagem) |>
group_by(par_1) |>
mutate(freq = n()) |>
ungroup()
View(muitos_registros)
# df com os maiores de par_1
mais_frequentes <- df_2 |>
filter(par_1%in%muitos_registros$par_1) |>
group_by(par_1) |>
mutate(freq = n()) |>
ungroup() |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante)
View(mais_frequentes)
# df com os maiores de par_1
mais_frequentes <- df_2 |>
filter(par_1%in%muitos_registros$par_1) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(mais_frequentes)
especifico <- df_2 |>
filter(ds_nome_pac%in%c('MARIA FRANCISCA CONCEICAO'),
ds_nome_mae%in%c('FRANCISCA MARIA CONCEICAO')) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(especifico)
# Specify the file path
path <- 'C:/vitalstrategies/data_sicence/TCC/SCRIPTS_LINKAGE/Erik/SIM'
# lista de arquivos com fim .DBF
dbf_files <- list.files(path, pattern = "\\.DBF$", full.names = TRUE)
# Data Frame para adicionar os dados carregados
sim_raw <- data.frame()
# Loop para carregar e concatenar os dbf
for (file in dbf_files) {
# Lendo arquivo DBF
sim_temp <- read.dbf(file) |>
mutate(ANO=substr(DTOBITO,5,8))
sim_raw <- bind_rows(sim_raw,sim_temp)
rm(sim_temp)
}
sim<-sim_raw
sim_filtrado = sim |> filter(CODMUNRES == 240810)
sim_filtrado = sim |> filter(CODMUNRES == 240810,
ANO == 2018)
tab_1(sim, ANO)
tab_1(sim |> filer(CODMUNRES == 240810), ANO)
tab_1(sim |> filter(CODMUNRES == 240810), ANO)
tab_1(sim |> filter(CODMUNRES == 240810), ANO) |> arrange(ANO)
sim_link <- sim |> unique()
tab_1(sim, NUMERODO)
tab_1(sim_link, NUMERODO)
tab_2(NUMERODO, ANO)
tab_2(sim,NUMERODO, ANO)
is.na(sim)
sim_linkado <- df_2 |> filter(banco == "SIM")
sim_linkado
View(sim_linkado)
sim_linkado <- sim_linkado |> select(par_1, nu_do, ds_nome_pac)
View(sim_linkado)
View(sim)
especifico <- df_2 |>
filter(ds_nome_pac%in%c('ELIONEIDE SANTOS SILVA SOUZA')) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(especifico)
especifico <- df_2 |>
filter(par_1%in%c(40431)) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(especifico)
especifico <- df_2 |>
filter(ds_nome_pac%in%c('MARLUCE BATISTA SILVA')) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
especifico <- df_2 |>
filter(par_1%in%c(56337)) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(especifico)
especifico <- df_2 |>
filter(ds_nome_pac%in%c('MARIA IZABEL CONCEICAO')) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(especifico)
especifico <- df_2 |>
filter(ds_nome_pac%in%c(213677)) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
especifico <- df_2 |>
filter(par_1%in%c(213677)) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
especifico <- df_2 |>
filter(par_1%in%c(3083555,541115
202741
especifico <- df_2 |>
filter(par_1%in%c(3083555,541115
202741,
especifico <- df_2 |>
filter(par_1%in%c(3083555,541115,
202741,
109073,
315,
71865,
72330,
165616,
186864,
6521,
8628646,
15424046,
38078 )) |>
group_by(par_1) |>
select(par_1, banco, ds_nome_pac, dt_nasc, dt_obito,
ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel, cd_causabas, ds_rua_res, cd_atestante) |>
mutate(freq = n()) |>
ungroup()
View(especifico)
df_2 |> distinct(par_1) |> tab_1(par_1)
df_2 |> distinct(par_1) |> tab_1(as.character(par_1))
df_2 |> distinct(par_1) |> mutate(par_1 = as.character(par_1)) tab_1((par_1))
df_2 |> distinct(par_1) |> mutate(par_1 = as.character(par_1)) tab_1((par_1))
df_2 |> distinct(par_1) |> mutate(par_1 = as.character(par_1)) |> tab_1((par_1))
rlang::last_trace()
sim_na <- sim |>
a <- df_2 |> distinct(par_1)
a
sim_na <- sim |>
a <- df_2 |> distinct(par_1)
a <- df_2 |> distinct(par_1)
a
a <- df_2 |> distinct(par_1, banco)
tab_1(banco)
tab_1(a,banco)
